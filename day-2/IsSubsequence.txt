392. Is Subsequence
Easy
6.7K
382
Companies
Given two strings s and t, return true if s is a subsequence of t, or false otherwise.

A subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).

 

Example 1:

Input: s = "abc", t = "ahbgdc"
Output: true
Example 2:

Input: s = "axc", t = "ahbgdc"
Output: false
 

Constraints:

0 <= s.length <= 100
0 <= t.length <= 104
s and t consist only of lowercase English letters.
 

Follow up: Suppose there are lots of incoming s, say s1, s2, ..., sk where k >= 109, and you want to check one by one to see if t has its subsequence. In this scenario, how would you change your code?

//C++


class Solution {
public:
    bool isSubsequence(string s, string t) {
        int s1 = s.length();
        int s2 = t.length();
        if (s2 < s1) return false;
        if(s1 == 0 && s2 >=1) return true;
        int left=0;
        int right = t.length()-1;
        int si=0;
        int sr = s1-1;
        int count =0;
        while(left<right){
            if(t[left] == s[si]){
                count++;
                left++;
                si++;
            }
            if(t[right] == s[sr]){
                count++;
                right--;
                sr--;
            }
            left++;
          
        }
        if (count == s1) return true;
        else return false;
    }
};